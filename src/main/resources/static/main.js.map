{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {HttpClient} from '@angular/common/http';\nimport {Component, ViewChild, AfterViewInit} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport { Page } from 'ngx-pagination/dist/pagination-controls.directive';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport { NgbPanelChangeEvent, NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  title = 'cryptoui';\n  @ViewChild('myaccordion', {static : true}) accordion: NgbAccordion;\n  repository: Repository | null;\n  users: string[] = [];\n  userInfo: UserInfo | null;\n  filterId: number = 0;\n  login: boolean = false;\n\n  myForm = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  });\n\n  constructor(private _httpClient: HttpClient){\n    this.repository = new Repository(_httpClient);\n    this.updateUsers();\n  }\n\n  private updateUsers() {\n    this.repository.getUsers().subscribe(data => {\n      this.users = data;\n    });\n  }\n\n  beforeChange($event: NgbPanelChangeEvent) {\n    console.log($event.panelId);\n    this.getUserInfo($event.panelId);\n  }\n\n  getUserInfo(user : string){\n    this.repository.getUserInfo(user).subscribe(data => {\n      this.userInfo = data;\n    });\n  }\n\n  onSelected(value: number){\n    console.log(value);\n    this.filterId = value;\n  }\n\n  get f(){\n    return this.myForm.controls;\n  }\n\n  onFileChange(event) {\n\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.myForm.patchValue({\n        fileSource: file\n      });\n    }\n  }\n\n  addUser(value: string){\n    this.repository.getUserInfo(value).subscribe(data =>{\n      this.users.push(data.username);\n    });\n  }\n\n  submit(){\n    console.log('**********************');\n    const formData = new FormData();\n    formData.append('file', this.myForm.get('fileSource').value);\n    let pathParam: string;\n    let type: string;\n    let encryptDecrypt: string;\n\n    if(this.filterId == 1){\n      type = 'AES';\n      encryptDecrypt = 'encrypt';\n    } else if(this.filterId == 2){\n      type = 'AES';\n      encryptDecrypt = 'decrypt';\n    } else if(this.filterId == 3){\n      type = 'RSA';\n      encryptDecrypt = 'encrypt';\n    } else if(this.filterId == 4){\n      type = 'RSA';\n      encryptDecrypt = 'decrypt';\n    } else if(this.filterId == 5){\n      type = 'HASH';\n      encryptDecrypt = 'MD5';\n    } else if(this.filterId == 6){\n      type = 'HASH';\n      encryptDecrypt = 'SHA-256';\n    }\n\n    pathParam = `/${type}/${encryptDecrypt}?user=${this.userInfo.username}`\n    this.repository.downloadFile(pathParam, formData)\n      .subscribe(res => {\n        console.log(this.myForm.get('fileSource').value.name);\n        const fileName = this.myForm.get('fileSource').value.name;\n        saveAs(new Blob([res], {type: 'application/text'}), fileName.substring(0, fileName.indexOf('.txt')) + `_${type}_${encryptDecrypt}.txt`);\n      });\n  }\n\n  validateUser(user: string, password: string){\n\n    let request: any = {\"username\": user, \"password\": password};\n    this.repository.validateUser(request).subscribe(res => {\n      this.userInfo = res;\n      this.login = true;\n    },\n      (error) => {\n        alert('Login failed !!!')\n      });\n  }\n\n  deleteUser(username: string){\n     this.repository.deleteUser(username).subscribe((res =>{\n       this.updateUsers();\n     }));\n  }\n}\n\nexport interface UserInfo{\n  username: string;\n  password: string;\n  aesKey: string;\n  rsaPublicKey: string;\n\n  module: BigInteger;\n  publicExpo: BigInteger;\n}\n\nexport class Repository{\n  constructor(private _httpClient: HttpClient){}\n  //href = 'https://cse6331-assignment7.azurewebsites.net/game';\n  href = '/crypto';\n\n  getUsers(): Observable<string[]>{\n    return this._httpClient.get<string[]>(this.href + '/users');\n  }\n\n  getUserInfo(user: string): Observable<UserInfo>{\n    return this._httpClient.get<UserInfo>(`${this.href}/userinfo?user=${user}`);\n  }\n\n  downloadFile(pathParam: string, formData: FormData) {\n    return this._httpClient.post(`${this.href}/encrypt-file${pathParam}`, formData, {\n      responseType: 'arraybuffer'\n    });\n  }\n\n  validateUser(userInfo: string): Observable<UserInfo>{\n    return this._httpClient.post<UserInfo>(`${this.href}/validateUser`, userInfo);\n  }\n\n  deleteUser(username: string){\n    return this._httpClient.delete(`${this.href}/userinfo?user=${username}`);\n  }\n}\n","<div class=\"page-header\">\n  <hr>\n  <h1>1001819448 </h1>\n  <h1>Dinesh Madurantakam </h1>\n</div>\n<br>\n<div *ngIf=\"!login\">\n<div class=\"row\">\n  <div class=\"col-sm\">\n    <input #user mdbInput type=\"text\" id=\"form1\" class=\"form-control\">\n    <label for=\"form1\" class=\"\">username</label>\n  </div>\n  <div class=\"col-sm\">\n    <input #password mdbInput type=\"text\" id=\"form1\" class=\"form-control\">\n    <label for=\"form1\" class=\"\">password</label>\n  </div>\n  <div class=\"col-sm\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"validateUser(user.value, password.value)\">Login</button>\n  </div>\n</div>\n</div>\n<div *ngIf=\"login\">\n<ngb-accordion [closeOthers]=\"true\" #myaccordion=\"ngbAccordion\" (panelChange)=\"beforeChange($event)\"\n               *ngFor=\"let item of users\">\n  <ngb-panel id=\"{{item}}\" title=\"User: {{item}}\">\n    <ng-template ngbPanelContent>\n      <div class=\"row\">\n        <div class=\"col col-lg-3\">User Name: </div>\n        <div class=\"col\"> {{userInfo.username}}</div>\n        <div class=\"w-100\"></div>\n        <div class=\"col col-lg-3\">Password generated: </div>\n        <div class=\"col\"> {{userInfo.password}}</div>\n        <div class=\"w-100\"></div>\n        <div class=\"col col-lg-3\">AES Key : </div>\n        <div class=\"col\"> {{userInfo.aesKey}}</div>\n        <div class=\"w-100\"></div>\n        <div class=\"col col-lg-3\">RSA Public KEY : </div>\n        <div class=\"col\"> {{userInfo.module}}~{{userInfo.publicExpo}}</div>\n        <div class=\"w-100\"></div>\n        <div class=\"col col-lg-3\"></div>\n        <div class=\"col-sm\" *ngIf=\"userInfo.username !== 'admin'\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"deleteUser(userInfo.username)\">Delete User</button>\n        </div>\n      </div>\n    </ng-template>\n  </ngb-panel>\n\n</ngb-accordion>\n<br>\n<br>\n<div class=\"md-form\">\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <input #textbox mdbInput type=\"text\" id=\"form1\" class=\"form-control\">\n      <label for=\"form1\" class=\"\">username</label>\n    </div>\n    <div class=\"col-sm\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"addUser(textbox.value)\">Add User</button>\n    </div>\n  </div>\n  <br>\n\n<div class=\"card-body\">\n  <div class=\"container\">\n    <div class=\"row justify-content-between\">\n      <div class=\"col-3\">\n        <select class=\"form-control\" (change)=\"onSelected($event.target.value)\">\n          <option value=\"0\">- Select One -</option>\n          <option value=\"1\">- AES Encryption -</option>\n          <option value=\"2\">- AES Decryption -</option>\n          <option value=\"3\">- RSA Encryption -</option>\n          <option value=\"4\">- RSA Decryption -</option>\n          <option value=\"5\">- Hash MD5 -</option>\n          <option value=\"6\">- Hash SHA-256 -</option>\n        </select>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-body\" *ngIf=\"filterId != 0\">\n  <div class=\"container\">\n    <div class=\"row justify-content-between\">\n      <div class=\"md-form\">\n        <div class=\"row\">\n          <div class=\"col-sm\">\n            <form [formGroup]=\"myForm\" (ngSubmit)=\"submit()\">\n              <div class=\"form-group\">\n                <label for=\"file\">File Upload</label>\n                <input\n                  formControlName=\"file\"\n                  id=\"file\"\n                  type=\"file\"\n                  class=\"form-control\"\n                  (change)=\"onFileChange($event)\">\n                <div *ngIf=\"f.file.touched && f.file.invalid\" class=\"alert alert-danger\">\n                  <div *ngIf=\"f.file.errors.required\">File is required.</div>\n                </div>\n              </div>\n              <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgxChartsModule }from '@swimlane/ngx-charts';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports:      [BrowserModule, FormsModule, NgxPaginationModule, AppRoutingModule, BrowserAnimationsModule, MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxChartsModule,\n    NgbModule],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}